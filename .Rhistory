library(scales)
knitr::opts_chunk$set(echo = TRUE)
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", alpha=.05)
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", alpha=.05)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(glue)
library(matrixStats)
downloadDate <- date()
glue("Simulation date is {downloadDate}")
sessionInfo()
set.seed(420) # random number generator set at 420
lambda <- .2
sampCol <- 40 # number of variables
sampRow <- 1000  # number of observations
expoDis <- matrix(rexp(n=sampRow*sampCol, rate = lambda), sampRow, sampCol)
expoDF <- as.data.frame(expoDis)
# Converted it to a tibble to make it easier to visualize
e_df <- expoDF %>% mutate(
"MEAN" = rowMeans(expoDis),
"SD" = rowSds(expoDis),
"SumCumu" = cumsum(MEAN)/(1:sampRow)) %>%
select(MEAN, SD, SumCumu)
head(e_df)
e_mean <- mean(e_df$MEAN)
t_mean <- 1/lambda
res_df <- tibble(
Result = c("Sample means", "Theoretical mean"),
"Mean"=c(e_mean, t_mean))
res_df
ggplot(data = e_df, aes(x = 1:sampRow, y = SumCumu)) +
geom_hline(yintercept = t_mean, col = "red") +
geom_line(size = .5) +
labs(x = "Number of obs",
y = "Cumulative mean",
title = "Sample Means of 1000 Observations and 40 Variables") +
geom_text(aes(0,t_mean,
label = "theoretical mean = 1/lambda",
hjust = -1,
vjust =-1)) +
ylim(c(3.5,5.5))
e_df <- e_df %>% mutate(
VarCumu = cumsum((MEAN - e_mean)^2)/seq_along(MEAN-1))
head(e_df)
e_var <- var(e_df$MEAN)
t_var <- (1/(lambda*sqrt(sampCol)))^2
res_var_df <- tibble(
Result = c("Sample variance", "Theoretical variance"),
"Variance" = c(e_var, t_var))
res_var_df
ggplot(data=e_df,
aes(x = 1:sampRow,
y = VarCumu))+
geom_hline(yintercept = t_var,
col="red") +
geom_line(size = .5) +
labs(x = "Number of Observations",
y = "Cumulative Variance",
title = "Sample Variances of 1000 Observations and 40 Variables")
binhist <- hist(e_df$MEAN, plot=FALSE, breaks = "FD")
g2 <- ggplot(data = e_df,
aes(x=MEAN))
g2 <- g2 + geom_histogram(aes(y=..density..),
fill="white",
col="black",
breaks =binhist$breaks) +
geom_density(
aes(MEAN),
color = "blue") +
geom_vline(
xintercept = c(e_mean, t_mean),
color = c("red", "yellow")) +
labs(
x= "Sample Means",
y= "Density",
title = "Histogram of Sample Means")
g2 + stat_function(
fun = dnorm,
colour = "magenta",
args = list(mean = t_mean,
sd = sqrt(t_var)))
e_df %>% ggplot(aes(
sample=MEAN)) +
stat_qq() +
stat_qq_line(color="blue") +
labs(x="Theoretical Quantile",
y="Sample Quantiles",
title = "Quantile - Quantile Plot")
hcDf <- as.data.frame(expoDis)
x <- hcDf$V1[1:30]
y <- hcDf$V2[1:30]
plot(x,y, col = "blue")
text(x+.05, y+.05, as.character(1:60))
dataframe <- data.frame(x=x, y=y)
d<-dist(dataframe)
d
rdistxy <- as.matrix(dist(dataframe))
## remove the diagonal from consideration
diag(rdistxy) <- diag(rdistxy) +100000
# Find the index of the points with minimum distance
ind <- which(rdistxy == min(rdistxy), arr.ind = TRUE)
ind
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", alpha=.05)
text(x+.05, y+.05, labels=as.character(1:30))
points(x[ind[1,]], y[ind[1,]], col="green", pch =19, cex=2)
hcluster <- dist(dataframe) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <-cut(dendro, h=hcluster$height[2])
plot(cutDendro$lower[[11]], yaxt = "n", main ="Begin building tree")
plot(x,y, col ="yellow", pc = 19, cex =2, main = "Data"
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(glue)
library(matrixStats)
downloadDate <- date()
glue("Simulation date is {downloadDate}")
sessionInfo()
set.seed(420) # random number generator set at 420
lambda <- .2
sampCol <- 40 # number of variables
sampRow <- 1000  # number of observations
expoDis <- matrix(rexp(n=sampRow*sampCol, rate = lambda), sampRow, sampCol)
expoDF <- as.data.frame(expoDis)
# Converted it to a tibble to make it easier to visualize
e_df <- expoDF %>% mutate(
"MEAN" = rowMeans(expoDis),
"SD" = rowSds(expoDis),
"SumCumu" = cumsum(MEAN)/(1:sampRow)) %>%
select(MEAN, SD, SumCumu)
head(e_df)
e_mean <- mean(e_df$MEAN)
t_mean <- 1/lambda
res_df <- tibble(
Result = c("Sample means", "Theoretical mean"),
"Mean"=c(e_mean, t_mean))
res_df
ggplot(data = e_df, aes(x = 1:sampRow, y = SumCumu)) +
geom_hline(yintercept = t_mean, col = "red") +
geom_line(size = .5) +
labs(x = "Number of obs",
y = "Cumulative mean",
title = "Sample Means of 1000 Observations and 40 Variables") +
geom_text(aes(0,t_mean,
label = "theoretical mean = 1/lambda",
hjust = -1,
vjust =-1)) +
ylim(c(3.5,5.5))
e_df <- e_df %>% mutate(
VarCumu = cumsum((MEAN - e_mean)^2)/seq_along(MEAN-1))
head(e_df)
e_var <- var(e_df$MEAN)
t_var <- (1/(lambda*sqrt(sampCol)))^2
res_var_df <- tibble(
Result = c("Sample variance", "Theoretical variance"),
"Variance" = c(e_var, t_var))
res_var_df
ggplot(data=e_df,
aes(x = 1:sampRow,
y = VarCumu))+
geom_hline(yintercept = t_var,
col="red") +
geom_line(size = .5) +
labs(x = "Number of Observations",
y = "Cumulative Variance",
title = "Sample Variances of 1000 Observations and 40 Variables")
binhist <- hist(e_df$MEAN, plot=FALSE, breaks = "FD")
g2 <- ggplot(data = e_df,
aes(x=MEAN))
g2 <- g2 + geom_histogram(aes(y=..density..),
fill="white",
col="black",
breaks =binhist$breaks) +
geom_density(
aes(MEAN),
color = "blue") +
geom_vline(
xintercept = c(e_mean, t_mean),
color = c("red", "yellow")) +
labs(
x= "Sample Means",
y= "Density",
title = "Histogram of Sample Means")
g2 + stat_function(
fun = dnorm,
colour = "magenta",
args = list(mean = t_mean,
sd = sqrt(t_var)))
e_df %>% ggplot(aes(
sample=MEAN)) +
stat_qq() +
stat_qq_line(color="blue") +
labs(x="Theoretical Quantile",
y="Sample Quantiles",
title = "Quantile - Quantile Plot")
hcDf <- as.data.frame(expoDis)
x <- hcDf$V1[1:30]
y <- hcDf$V2[1:30]
plot(x,y, col = "blue")
text(x+.05, y+.05, as.character(1:60))
dataframe <- data.frame(x=x, y=y)
d<-dist(dataframe)
d
rdistxy <- as.matrix(dist(dataframe))
## remove the diagonal from consideration
diag(rdistxy) <- diag(rdistxy) +100000
# Find the index of the points with minimum distance
ind <- which(rdistxy == min(rdistxy), arr.ind = TRUE)
ind
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", alpha=.05)
text(x+.05, y+.05, labels=as.character(1:30))
points(x[ind[1,]], y[ind[1,]], col="green", pch =19, cex=2)
hcluster <- dist(dataframe) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <-cut(dendro, h=hcluster$height[2])
plot(cutDendro$lower[[11]], yaxt = "n", main ="Begin building tree")
plot(x,y, col ="yellow", pc = 19, cex =2, main = "Data"
)
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", alpha=.05)
text(x+.05, y+.05, labels=as.character(1:30))
points(x[ind[1,]], y[ind[1,]], col="white", pch =19, cex=2)
hcluster <- dist(dataframe) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <-cut(dendro, h=hcluster$height[2])
plot(cutDendro$lower[[11]], yaxt = "n", main ="Begin building tree")
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", alpha=.05)
text(x+.05, y+.05, labels=as.character(1:30))
points(x[ind[1,]], y[ind[1,]], col="purple", pch =19, cex=2)
hcluster <- dist(dataframe) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <-cut(dendro, h=hcluster$height[2])
plot(cutDendro$lower[[11]], yaxt = "n", main ="Begin building tree")
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", alpha.f=.05)
text(x+.05, y+.05, labels=as.character(1:30))
points(x[ind[1,]], y[ind[1,]], col="purple", pch =19, cex=2)
hcluster <- dist(dataframe) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <-cut(dendro, h=hcluster$height[2])
plot(cutDendro$lower[[11]], yaxt = "n", main ="Begin building tree")
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", alpha=.05)
text(x+.05, y+.05, labels=as.character(1:30))
points(x[ind[1,]], y[ind[1,]], col="purple", pch =19, cex=2)
hcluster <- dist(dataframe) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <-cut(dendro, h=hcluster$height[2])
plot(cutDendro$lower[[11]], yaxt = "n", main ="Begin building tree")
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", alpha=5)
text(x+.05, y+.05, labels=as.character(1:30))
points(x[ind[1,]], y[ind[1,]], col="purple", pch =19, cex=2)
hcluster <- dist(dataframe) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <-cut(dendro, h=hcluster$height[2])
plot(cutDendro$lower[[11]], yaxt = "n", main ="Begin building tree")
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", alpha=.8)
text(x+.05, y+.05, labels=as.character(1:30))
points(x[ind[1,]], y[ind[1,]], col="purple", pch =19, cex=2)
hcluster <- dist(dataframe) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <-cut(dendro, h=hcluster$height[2])
plot(cutDendro$lower[[11]], yaxt = "n", main ="Begin building tree")
library(scales)
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", scales::alpha=.05)
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data", alpha=.05)
text(x+.05, y+.05, labels=as.character(1:30))
points(x[ind[1,]], y[ind[1,]], col="purple", pch =19, cex=2)
hcluster <- dist(dataframe) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <-cut(dendro, h=hcluster$height[2])
plot(cutDendro$lower[[11]], yaxt = "n", main ="Begin building tree")
par(mfrow = c(1,2))
plot(x,y, col = "yellow", pch = 19, cex =2, main="Data")
text(x+.05, y+.05, labels=as.character(1:30))
points(x[ind[1,]], y[ind[1,]], col="purple", pch =19, cex=2, alpha = .05)
hcluster <- dist(dataframe) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <-cut(dendro, h=hcluster$height[2])
plot(cutDendro$lower[[11]], yaxt = "n", main ="Begin building tree")
library(tidyverse)
library(glue)
library(matrixStats)
library(scales)
downloadDate <- date()
glue("Simulation date is {downloadDate}")
sessionInfo()
install.packages(c("modelr", "tidyr", "tidyselect", "tinytex", "xfun"))
install.packages(c("modelr", "tidyr", "tidyselect", "tinytex", "xfun"))
install.packages(c("modelr", "tidyr", "tidyselect", "tinytex", "xfun"))
